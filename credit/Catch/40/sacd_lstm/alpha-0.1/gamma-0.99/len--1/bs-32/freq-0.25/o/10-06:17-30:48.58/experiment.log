Logging to /data/scratch/idanshen/pomdp-baselines/credit/Catch/40/sacd_lstm/alpha-0.1/gamma-0.99/len--1/bs-32/freq-0.25/o/10-06:17-30:48.58 
preload cost 8.29s 
--cfg=/data/scratch/idanshen/pomdp-baselines/configs/credit/catch/rnn.yml







--nooracle
--nodebug
 
pid 30540 improbablex009.csail.mit.edu 
obs_dim 49 act_dim 3 
<class 'policies.models.policy_rnn.ModelFreeOffPolicy_Separate_RNN'> memory 
ModelFreeOffPolicy_Separate_RNN(
  (critic): Critic_RNN(
    (image_encoder): ImageEncoder(
      (cnn): Sequential(
        (0): Conv2d(1, 8, kernel_size=(2, 2), stride=(1, 1))
        (1): ReLU()
        (2): Conv2d(8, 16, kernel_size=(2, 2), stride=(1, 1))
        (3): ReLU()
      )
      (linear): Linear(in_features=400, out_features=100, bias=True)
    )
    (action_embedder): FeatureExtractor()
    (reward_embedder): FeatureExtractor()
    (rnn): LSTM(100, 128)
    (qf1): FlattenMlp(
      (fc0): Linear(in_features=228, out_features=128, bias=True)
      (fc1): Linear(in_features=128, out_features=128, bias=True)
      (last_fc): Linear(in_features=128, out_features=3, bias=True)
    )
    (qf2): FlattenMlp(
      (fc0): Linear(in_features=228, out_features=128, bias=True)
      (fc1): Linear(in_features=128, out_features=128, bias=True)
      (last_fc): Linear(in_features=128, out_features=3, bias=True)
    )
  )
  (critic_target): Critic_RNN(
    (image_encoder): ImageEncoder(
      (cnn): Sequential(
        (0): Conv2d(1, 8, kernel_size=(2, 2), stride=(1, 1))
        (1): ReLU()
        (2): Conv2d(8, 16, kernel_size=(2, 2), stride=(1, 1))
        (3): ReLU()
      )
      (linear): Linear(in_features=400, out_features=100, bias=True)
    )
    (action_embedder): FeatureExtractor()
    (reward_embedder): FeatureExtractor()
    (rnn): LSTM(100, 128)
    (qf1): FlattenMlp(
      (fc0): Linear(in_features=228, out_features=128, bias=True)
      (fc1): Linear(in_features=128, out_features=128, bias=True)
      (last_fc): Linear(in_features=128, out_features=3, bias=True)
    )
    (qf2): FlattenMlp(
      (fc0): Linear(in_features=228, out_features=128, bias=True)
      (fc1): Linear(in_features=128, out_features=128, bias=True)
      (last_fc): Linear(in_features=128, out_features=3, bias=True)
    )
  )
  (actor): Actor_RNN(
    (image_encoder): ImageEncoder(
      (cnn): Sequential(
        (0): Conv2d(1, 8, kernel_size=(2, 2), stride=(1, 1))
        (1): ReLU()
        (2): Conv2d(8, 16, kernel_size=(2, 2), stride=(1, 1))
        (3): ReLU()
      )
      (linear): Linear(in_features=400, out_features=100, bias=True)
    )
    (action_embedder): FeatureExtractor()
    (reward_embedder): FeatureExtractor()
    (rnn): LSTM(100, 128)
    (policy): CategoricalPolicy(
      (fc0): Linear(in_features=228, out_features=128, bias=True)
      (fc1): Linear(in_features=128, out_features=128, bias=True)
      (last_fc): Linear(in_features=128, out_features=3, bias=True)
    )
  )
  (actor_target): Actor_RNN(
    (image_encoder): ImageEncoder(
      (cnn): Sequential(
        (0): Conv2d(1, 8, kernel_size=(2, 2), stride=(1, 1))
        (1): ReLU()
        (2): Conv2d(8, 16, kernel_size=(2, 2), stride=(1, 1))
        (3): ReLU()
      )
      (linear): Linear(in_features=400, out_features=100, bias=True)
    )
    (action_embedder): FeatureExtractor()
    (reward_embedder): FeatureExtractor()
    (rnn): LSTM(100, 128)
    (policy): CategoricalPolicy(
      (fc0): Linear(in_features=228, out_features=128, bias=True)
      (fc1): Linear(in_features=128, out_features=128, bias=True)
      (last_fc): Linear(in_features=128, out_features=3, bias=True)
    )
  )
) 
<class 'buffers.seq_replay_buffer_efficient.RAMEfficient_SeqReplayBuffer'> 
*** total rollouts 20005 total env steps 5581395 
total RAM usage: 4.40 GB
 
Collecting initial pool of data.. 
